@page "/Parcial/Index"
@inject HttpClient httpClient
@using Library


<div class="card">
    <div class="card">
        <div class="card-header">
            <h3>Veh&iacute;culo</h3>
            <a href="/Parcial/create" class="btn btn-outline-primary">Crear Veh&iacute;culo</a>
        </div>

        
		<div class="card-body">
				@*Filtro*@
			<div class="row justify-content-center">
					<div class="col-2">
						@*Filtro*@
						<label class="form-label" for="filtrarPor"><strong>Filtrar por:</strong></label>
						<InputSelect id="filtrarPor" class="form-select" @bind-Value="filtrarPor">
							<option value="1">Id</option>
							<option value="2">Fecha</option>
							<option value="3">Descripci&oacute;n</option>
						</InputSelect>
					</div>
					@*Datos*@
					<div class="col-2 d-flex align-items-end">
						@switch (filtrarPor)
						{
							case 1:
								<InputNumber class="form-control" @bind-Value="id" />
								break;

							case 2:
								<InputDate class="form-control" @bind-Value="fecha" />
								break;

							case 3:
								<InputText class="form-control" @bind-Value="descripcion" placeholder="Ingrese una descripción" />
								break;
						}
					</div>
					<div class="col-auto d-flex align-items-end">
						<button type="button" class="btn btn-outline-primary" @onclick="Buscar"><i class="bi bi-search" /></button>
					</div>
			</div>


				<div class="card-body">
					@if (Vehiculo is not null)
					{
						<table class="table table-striped table-hover">
							<thead>
								<tr>
									<th>Veh&iacute;culo Id</th>
									<th>Fecha</th>
									<th>Descripci&oacuten</th>
									<th>Costo</th>
									<th>Gastos</th>
									<th>Acciones</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var vehiculo in Vehiculo)
								{
									<tr>
										<td>@vehiculo.VehiculoId</td>
										<td>@vehiculo.Fecha.ToString("MM-dd-yyyy")</td>
										<td>@vehiculo.Descripcion</td>
										<td>@vehiculo.Costo.ToString("N2")</td>
										<td>@vehiculo.Gastos.ToString("N2")</td>
										<td>
											<a href="/Parcial/Edit/@vehiculo.VehiculoId"><i class="bi bi-pencil-square" /></a>
											<a href="/Parcial/View/@vehiculo.VehiculoId"><i class="bi bi-eye-fill" /></a>
											<a href="/Parcial/Delete/@vehiculo.VehiculoId" class="link-danger"><i class="bi bi-trash" /></a>
										</td>
									</tr>
								}
							</tbody>
						</table>
					}
				</div>				
			
				
		</div>

    </div>

    <div class="card-footer">
        <div class="form-row justify-content-sm-between" aria-orientation="vertical">
            <div class="col-12 col-sm-3">
                <label for="CantidadRegistro" class="col-form-label"><strong>Veh&iacute;culo</strong>&nbsp;</label>
                <input id="CantidadRegistro" @bind-value="@conteo" disabled class="form-control" />
            </div>
        </div>
    </div>
	@mensaje
</div>



@code {
    public List<Vehiculo>? Vehiculo { get; set; }
    public int conteo { get; set; }
	public int filtrarPor { get; set; }
	public string descripcion { get; set; }
	public bool loading { get; set; } = true;
	public int id { get; set; }
	public string mensaje { get; set; }
	public DateTime fecha { get; set; } = DateTime.Today;

    protected override async void OnInitialized()
    {
        Vehiculo = await httpClient.GetFromJsonAsync<List<Vehiculo>>("api/Vehiculoes");
        conteo = Vehiculo != null ? Vehiculo!.Count() : 0;
        StateHasChanged();
    }

    
	public async Task Buscar()
	{
		if (filtrarPor == 0)
		{
			mensaje = "Debe indicar por cual método desea filtrar";
			StateHasChanged();
		}

		switch(filtrarPor)
		{
			case 1:
				var buscarId = Vehiculo.FirstOrDefault(v => v.VehiculoId == id);
				if (buscarId != null)
				{
					Vehiculo.Clear();
					Vehiculo.Add(buscarId);
				}
				else
					mensaje = "Id no existe.";
				break;

			case 2:
				var buscarFecha = Vehiculo.Where(v => v.Fecha == fecha).ToList();
				if (buscarFecha.Count > 0)
					Vehiculo = buscarFecha;
				else
					mensaje = "No hay Vehículo en esta fecha";
				break;

			case 3:
				var buscarDesc = Vehiculo.Where(v => v.Descripcion == descripcion).ToList();
				if (buscarDesc.Count > 0)
					Vehiculo = buscarDesc;
				else
					mensaje = "Descripción no encontrada";
				break;
		}
	}

}
